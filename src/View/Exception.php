<?php

namespace SimPas\View;

use SimPas\Application;
use DateTime;

class Exception
{
    private $line;
    private $file;

    /**
     * @param $exception
     * @param null $type
     * @param string $template
     * @return mixed
     * @throws \Exception
     */
    public function drawExceptionMessage($exception, $type = null, string $template = 'Exception')
    {
        header('HTTP/1.1 502 Bad Gateway', true, 502);

        $this->line = $exception->getLine();
        $this->file = $exception->getFile();

        $this->render([
            'message' => str_replace([
                '++',
                '+-+',
            ], [
                '<code style="white-space: normal">',
                '</code>',
            ], $exception->getMessage()),
            'stacktrace' => $exception->getTrace(),
            'lines' => $this->fileContent(),
            'data' => [$this->line, $this->line - 1, $this->file],
            'type' => (string)$type,
        ]);

        $this->saveLastException($exception);

        return $this->{$template};
    }

    /**
     * @return array|string[]
     */
    private function fileContent(): array
    {
        $file = @file($this->file);

        if (count($file) >= 7) {
            $lines[$this->line - 4] = ($file[$this->line - 4] ?? null);
            $lines[$this->line - 3] = ($file[$this->line - 3] ?? null);
            $lines[$this->line - 2] = ($file[$this->line - 2] ?? null);
            $lines[$this->line - 1] = ($file[$this->line - 1] ?? null);
            $lines[$this->line] = ($file[$this->line] ?? null);
            $lines[$this->line + 1] = ($file[$this->line + 1] ?? null);
            $lines[$this->line + 2] = ($file[$this->line + 2] ?? null);
        } else {
            $lines = ['-'];
        }

        return $lines;
    }

    /**
     * @param $exception
     */
    private function saveLastException($exception)
    {
        if ($exception instanceof \Exception) {
            $source = 'Last exception generated by SimPas Application' . PHP_EOL;
            $source .= '-- Time: ' . (new DateTime())->format('r') . PHP_EOL;
            $source .= '-- Exception message: ' . $exception->getMessage() . PHP_EOL;
            $source .= '-- Exception file: ' . $exception->getFile() . PHP_EOL;
            $source .= '-- Exception line: ' . $exception->getLine();

            @file_put_contents(Application::makePath('storage:last_exception.log'), $source);
        }
    }
}
